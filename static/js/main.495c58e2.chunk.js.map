{"version":3,"sources":["components/DashBoard.js","components/App.js","index.js"],"names":["DashBoard","props","state","bigChartData","language","text_style","music","scenePlaytime","fullPlaytime","isDisablePlay","showPreviewModal","isLoadingApi","text_display","scenes","audios","setBgChartData","name","setState","onApiCall","articleTitle","refs","title_article","value","articleText","text_article","articleUrl","url_article","articleLimit","limit_article","hasText","axios","post","title","text","isText","limit","then","responseJson","console","log","data","sentences","newScenes","map","doSerialize","articlePhrases","replace","split","filter","el","length","markPhrases","sentence","trim","newArr","forEach","index","array","push","formatPhrase","includes","catch","error","toMMSS","s","sec_num","parseInt","minutes","Math","floor","seconds","className","style","margin","left","width","height","position","zIndex","top","overflowX","padding","boxShadow","backgroundColor","Card","CardBody","textAlign","color","this","FormGroup","ref","type","placeholder","rows","cols","defaultValue","Label","Input","id","Button","onClick","disabled","bottom","ButtonGroup","data-toggle","tag","size","classNames","active","defaultChecked","right","togglePreviewModal","overflow","display","Modal","isOpen","ModalHeader","ModalBody","MAX_WIDTH","reduce","total","curr","duration","visibility","controls","loop","alt","ModalFooter","playAllScened","Component","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.495c58e2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport classNames from \"classnames\";\n//import Scene from './Scene'\nimport \"../assets/scss/black-dashboard-react.scss\";\nimport \"../assets/css/nucleo-icons.css\";\nimport {\n    Button,\n    ButtonGroup,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Card,\n    CardBody,\n    FormGroup,\n    Label,\n    Input\n  } from \"reactstrap\";\nimport axios from \"axios\";\n\nlet SCALE_PREVIEW = 1.68;\nlet MAX_WIDTH = 450 * SCALE_PREVIEW;\nlet MAX_HEIGHT = (MAX_WIDTH / 16) * 9;\nlet FONT_SIZE = 13 * SCALE_PREVIEW;\nlet WORD_MARGIN = 24 * SCALE_PREVIEW;\n\n// small thumbnail\nlet S_MAX_WIDTH = MAX_WIDTH / SCALE_PREVIEW;\nlet S_MAX_HEIGHT = MAX_HEIGHT / SCALE_PREVIEW;\nlet S_FONT_SIZE = FONT_SIZE / SCALE_PREVIEW;\nlet S_WORD_MARGIN = WORD_MARGIN / SCALE_PREVIEW;\n\nvar timer;\nvar currIndex = 0;\n\nclass DashBoard extends Component {\n    constructor(props) {\n        super(props);\n    }\n    state = {\n        bigChartData: \"data1\",\n        language: \"english\",\n        text_style: 1, // text animation 1 or 2\n        music: 0, // music 0 or 1\n        scenePlaytime: 0, // sec\n        fullPlaytime: 0, // sec\n        isDisablePlay: false,\n        showPreviewModal: false,\n        isLoadingApi: false,\n        text_display: <div />,\n        scenes: [],\n        audios: [\n          \"https://storage.googleapis.com/lumen5-prod-audio/gothic-30z1OCWHSO4wee111gPGbe.mp3\",\n          \"https://storage.googleapis.com/lumen5-prod-audio/holly-in-the-snowfkRwixHOarpzLAwFBzLc.mp3\",\n          \"https://storage.googleapis.com/lumen5-prod-audio/home-at-last-is-she-thereM1kcjgrdLu2mk3e2ED3s.mp3\",\n          \"https://storage.googleapis.com/lumen5-prod-audio/bnm-0715-rubber-trees-fullB5W821PYiWsd.mp3\",\n          \"https://storage.googleapis.com/lumen5-prod-audio/netherworld30GyArwSSgBpNeoDx8RH6.mp3\"\n        ]\n      };\n\n      setBgChartData = name => {\n        this.setState({\n          bigChartData: name\n        });\n      };\n\n    // --- API\n    onApiCall = () => {\n        var articleTitle = this.refs.title_article.value;\n        var articleText = this.refs.text_article.value;\n        var articleUrl = this.refs.url_article.value;\n        var articleLimit = this.refs.limit_article.value;\n\n        if (articleText === \"\" && articleUrl === \"\") return;\n\n        var hasText = articleText !== \"\";\n\n        this.setState({ isLoadingApi: true });\n\n        axios\n        .post(\n            \"http://nlp-publicl-70s5kwz40vc9-228536418.ap-southeast-1.elb.amazonaws.com/api/nlp\",\n            {\n            title: hasText ? articleTitle : articleTitle,\n            text: hasText ? articleText : articleUrl,\n            isText: hasText,\n            language: hasText ? this.state.language : \"english\", // url only for english\n            limit: articleLimit\n            }\n        )\n        .then(responseJson => {\n            console.log(responseJson.data);\n            return responseJson.data.sentences;\n        })\n        .then(sentences => {\n            console.log(sentences);\n            var newScenes = sentences.map(this.doSerialize);\n            var articlePhrases = articleText\n            .replace(\"mr.\", \"mr\")\n            .replace(\"Mr.\", \"Mr\")\n            .replace(\"mrs.\", \"mrs\")\n            .replace(\"Mrs.\", \"Mrs\")\n            .replace(\"ms.\", \"ms\")\n            .replace(\"Ms.\", \"Ms\")\n            .replace(\"dr.\", \"dr\")\n            .replace(\"Dr.\", \"Dr\")\n            .replace(\"jr.\", \"jr\")\n            .replace(\"Jr.\", \"Jr\")\n            .split(this.state.language === \"english\" ? \".\" : \"ã€‚\")\n            .filter(function(el) {\n                return el.length !== 0;\n            });\n\n            var markPhrases = sentences.map(sentence => sentence.sentence.trim());\n\n            var newArr = [];\n            articlePhrases.forEach((value, index, array) => {\n            // console.log(index + \" = \" + value);\n            newArr.push(\n                this.formatPhrase(value, markPhrases.includes(value.trim()), index)\n            );\n            });\n\n            this.setState({\n            isLoadingApi: false,\n            scenes: newScenes,\n            text_display: newArr\n            });\n        })\n        .catch(error => {\n            console.error(error);\n        });\n    };\n\n    // --- general functions\n    toMMSS = s => {\n        var sec_num = parseInt(s, 10); // don't forget the second param\n        var minutes = Math.floor(sec_num / 60);\n        var seconds = sec_num - minutes * 60;\n\n        if (minutes < 10) {\n        minutes = \"0\" + minutes;\n        }\n        if (seconds < 10) {\n        seconds = \"0\" + seconds;\n        }\n        return minutes + \":\" + seconds;\n    };\n    // --- UI\n    render() {\n        return (\n            <div\n              className=\"App\"\n              style={{\n                margin: \"16px\"\n              }}\n            >\n              <div\n                style={{\n                  left: 0,\n                  width: \"40%\",\n                  height: \"100%\",\n                  position: \"fixed\",\n                  zIndex: 1,\n                  top: 0,\n                  overflowX: \"hidden\",\n                  padding: \"16px\",\n                  boxShadow: \"0 0 0 0 black, 0 0 10px 0 black\",\n                  backgroundColor: \"rgba(255,255,255,0.03)\",\n                  //textAlign:\"center\"\n                }}\n              >\n                {/* ----- display ----- */}\n                <Card>\n                  <CardBody style={{ textAlign: \"justify\" }}>\n                    <span\n                      style={{\n                        color: \"white\"\n                      }}\n                    >\n                        {this.state.text_display}\n                    </span>\n                  </CardBody>\n                </Card>\n                {/* ----- form ----- */}\n                <FormGroup>\n                  <input\n                    ref=\"title_article\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Paste title here\"\n                  />\n                <Card>\n                  <CardBody style={{ textAlign: \"justify\" }}>\n                    <span\n                      style={{\n                        color: \"white\"\n                      }}\n                    >\n                    <textarea\n                    ref=\"text_article\"\n                    rows=\"50\" \n                    cols=\"60\"\n                    placeholder=\"Paste article text here\"\n                    className=\"form-control\"\n                  />\n                    </span>\n                  </CardBody>\n                </Card>\n                  or\n                  <br />\n                  <input\n                    ref=\"url_article\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Paste article url here (eg. http://www.article.com)\"\n                  />\n                  <br />\n                  <input\n                    ref=\"limit_article\"\n                    type=\"number\"\n                    className=\"form-control\"\n                    defaultValue=\"3\"\n                    placeholder=\"Limit no.\"\n                  />\n                </FormGroup>\n                <br />\n                <br />\n                {/* ----- music ----- */}\n                <FormGroup>\n                    <Label>Music:</Label>\n                    <Input\n                    type=\"select\"\n                    name=\"select\"\n                    id=\"music_selection\"\n                    >\n                    <option value=\"0\">Music 1</option>\n                    <option value=\"1\">Music 2</option>\n                    <option value=\"2\">Music 3</option>\n                    <option value=\"3\">Music 4</option>\n                    <option value=\"4\">Music 5</option>\n                    </Input>\n                </FormGroup>\n                <br />\n                {/* ----- api ----- */}\n                <Button\n                  onClick={this.onApiCall}\n                  color=\"primary\"\n                  className=\"animation-on-hover\"\n                  disabled={this.state.isLoadingApi}\n                >\n                  {this.state.isLoadingApi ? \"Loading...\" : \"Submit\"}\n                </Button>\n                <br />\n                <div\n                style={{\n                    bottom : \"0px\"\n                }}\n                >\n                <ButtonGroup\n                className=\"btn-group-toggle float-right\"\n                data-toggle=\"buttons\"\n                >\n                <Button\n                    tag=\"label\"\n                    color=\"info\"\n                    id=\"0\"\n                    size=\"sm\"\n                    className={classNames(\"btn-simple\", {\n                        active: this.state.bigChartData === \"data1\"\n                      })}\n                    onClick={() => this.setBgChartData(\"data1\")}\n                >\n                    <input\n                    defaultChecked\n                    className=\"d-none\"\n                    name=\"options\"\n                    type=\"radio\"\n                    />\n                    <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                    English\n                    </span>\n                    <span className=\"d-block d-sm-none\">\n                    <i className=\"tim-icons icon-single-02\" />\n                    </span>\n                </Button>\n                <Button\n                    color=\"info\"\n                    id=\"1\"\n                    size=\"sm\"\n                    tag=\"label\"\n                    className={classNames(\"btn-simple\", {\n                        active: this.state.bigChartData === \"data2\"\n                      })}\n                    onClick={() => this.setBgChartData(\"data2\")}\n                >\n                    <input\n                    className=\"d-none\"\n                    name=\"options\"\n                    type=\"radio\"\n                    />\n                    <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                    Chinese\n                    </span>\n                    <span className=\"d-block d-sm-none\">\n                    <i className=\"tim-icons icon-gift-2\" />\n                    </span>\n                </Button>\n                </ButtonGroup>\n                </div>\n                <br />\n                <br />\n                <br />\n              </div>\n              <div\n                style={{\n                  right: 0,\n                  width: \"60%\",\n                  height: \"100%\",\n                  position: \"fixed\",\n                  zIndex: 1,\n                  top: 0,\n                  overflowX: \"hidden\",\n                  margin: \"16px\",\n                  textAlign: \"center\"\n                }}\n              >\n                <Button color=\"primary\" onClick={this.togglePreviewModal}>\n                  Preview\n                </Button>\n                <br />\n                <br />\n                {/* ----- list ----- */}\n                <div>\n                  {/*this.state.scenes.map((scene, index) => (\n                    \n                    <Scene\n                      key={index}\n                      scenes={this.state.scenes}\n                      scene={scene}\n                      index={index}\n                      language={this.state.language}\n                      text_style={this.state.text_style}\n                      onRearrange={this.onRearrange}\n                      onRemoveScene={this.onRemoveScene}\n                      onDurationChange={this.onDurationChange}\n                      onMediaChange={this.onMediaChange}\n                      onTextChange={this.onTextChange}\n                    />\n                  ))*/}\n                </div>\n                <br /> <br />\n              </div>\n      \n              {/* ----- modal backdrop ----- */}\n              <div\n                style={{\n                  backgroundColor: \"rgba(0,0,0,0.7)\",\n                  top: 0,\n                  left: 0,\n                  height: \"100%\",\n                  width: \"100%\",\n                  position: \"absolute\",\n                  zIndex: 1,\n                  overflow: \"hidden\",\n                  textAlign: \"center\",\n                  display:\n                    this.state.showPreviewModal || this.state.isLoadingApi\n                      ? \"block\"\n                      : \"none\"\n                }}\n              />\n      \n              {/* ----- preview ----- */}\n              <Modal\n                isOpen={this.state.showPreviewModal}\n                style={{ \n                  overflow: \"hidden\",\n                  textAlign: \"center\"\n                }}\n                size=\"lg\"\n              >\n                <ModalHeader\n                  className=\"justify-content-center\"\n                >\n                  Preview\n                </ModalHeader>\n                <ModalBody className=\"justify-content-center\">\n                  <p style={{ textAlign: \"right\" }}>\n                    ({this.toMMSS(this.state.scenePlaytime)})\n                  </p>\n                  {/* ----- canvas ----- */}\n                  <canvas\n                    id=\"c\"\n                    ref=\"c\"\n                    width={MAX_WIDTH}\n                    height={MAX_HEIGHT}\n                    style={{\n                      backgroundColor: \"#dfdfdf\"\n                    }}\n                  />\n                  <p style={{ textAlign: \"right\" }}>\n                    {// current time\n                    this.toMMSS(this.state.fullPlaytime) +\n                      \"/\" +\n                      // total time\n                      this.toMMSS(\n                        this.state.scenes.reduce(\n                          (total, curr) => total + (curr.duration || 0),\n                          0\n                        )\n                      )}\n                  </p>\n                  <br />\n                  {/* ----- video ----- */}\n                  <video\n                    id=\"v\"\n                    ref=\"v\"\n                    style={{\n                      visibility: \"hidden\",\n                      position: \"absolute\",\n                      backgroundColor: \"#dfdfdf\"\n                    }}\n                    controls\n                    loop\n                  />\n                  {/* ----- image ----- */}\n                  <img\n                    id=\"img\"\n                    ref=\"img\"\n                    style={{ visibility: \"hidden\", position: \"absolute\" }}\n                    alt=\"\"\n                  />\n                  {/* ----- audio ----- */}\n                  <audio id=\"m\" ref=\"m\" />\n                </ModalBody>\n                <ModalFooter className=\"justify-content-center\">\n                  {/* ----- play ----- */}\n                  <Button\n                    ref=\"play_btn\"\n                    onClick={this.playAllScened}\n                    color=\"primary\"\n                    className=\"btn-icon animation-on-hover\"\n                    disabled={this.state.isDisablePlay}\n                  >\n                    <i className=\"tim-icons icon-triangle-right-17\" />\n                  </Button>\n                </ModalFooter>\n              </Modal>\n      \n              {/* ----- loading ----- */}\n              <Modal isOpen={this.state.isLoadingApi} size=\"sm\">\n                <ModalBody className=\"justify-content-center\">\n                  <p>loading...</p>\n                </ModalBody>\n              </Modal>\n            </div>\n        );\n    }\n}\n\nexport default DashBoard;","import React from 'react';\nimport './App.css';\n\nimport DashBoard from './DashBoard';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/*<header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload!!.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n  </header>*/}\n      <DashBoard/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}