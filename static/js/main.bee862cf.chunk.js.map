{"version":3,"sources":["api/unsplash.js","actions/index.js","components/SearchBar.js","components/Scene.js","components/DashBoard.js","components/App.js","reducers/index.js","index.js"],"names":["axios","create","baseURL","headers","Authorization","fetchPosts","term","dispatch","a","unsplash","get","params","query","response","console","log","type","payload","data","results","SearchBar","state","onFormSubmit","event","preventDefault","props","onSubmit","this","value","onChange","e","setState","target","React","Component","connect","imgs","MAX_WIDTH","MAX_HEIGHT","S_MAX_WIDTH","S_MAX_HEIGHT","S_FONT_SIZE","FONT_SIZE","Scene","showMediaModal","isEditing","texts","scene","text","placements","setup","media","medias","selected_media_index","elmnt","is_video","refs","s_v","s_img","src","url","ctxs","map","index","getContext","forEach","ctx","array","clearRect","addEventListener","_listener","vw","clientWidth","naturalWidth","vh","clientHeight","naturalHeight","scale","Math","max","drawImage","fillStyle","fillRect","font","text_style","drawWrappingWords","split","language","removeEventListener","toggleMediaModal","anim","onMediaSelected","onMediaChange","onEditText","onChangePlacement","alignment","item","j","onConfirmText","onTextChange","onChangeText","newText","nextProps","nextState","scenes","newProps","prevProps","prevState","style","display","flexDirection","justifyContent","marginBottom","marginRight","Button","disabled","onClick","onRearrange","className","position","length","onRemoveScene","color","key","width","height","id","ref","FormGroup","top","left","backgroundColor","textAlign","size","visibility","controls","loop","alt","marginLeft","duration","onDurationChange","min","Modal","isOpen","toggle","ModalHeader","ModalBody","flexWrap","margin","context","words","t_alpha","style_num","placement","is_thumbnail","hrzntl_point","anim1_x","font_size","word_margin","WORD_MARGIN","max_width","max_height","y","maxWidth","lineHeight","line","count","anim1_thickness","anim1_margin","shadowColor","shadowBlur","max_word_width","n","space","testLine","textWidth","measureText","fillText","x_point","DashBoard","bigChartData","music","scenePlaytime","fullPlaytime","isDisablePlay","showPreviewModal","isLoadingApi","text_display","audios","setBgChartData","name","doSerialize","img","urls","regular","onApiCall","title_article","articleText","text_article","articleUrl","url_article","limit_article","toMMSS","s","sec_num","parseInt","minutes","floor","seconds","filter","newScenes","Number","is_to_front","newPosition","oldPosition","new_scenes","push","sort","b","positionA","positionB","comparison","onLanguageChanged","onStyleChanged","selection","onMusicChanged","musicSelection","togglePreviewModal","doStop","newSc","zIndex","overflowX","padding","boxShadow","Card","CardBody","placeholder","rows","cols","defaultValue","Label","Input","bottom","ButtonGroup","data-toggle","tag","classNames","active","defaultChecked","right","overflow","reduce","total","curr","ModalFooter","playAllScened","App","combineReducers","action","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.bee862cf.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://api.unsplash.com',\n  headers: {\n    Authorization:\n      'Client-ID 34e39e5c2f447ce52009a515846ca2b6ccc35552bb63de59cf4a6d06728f3f7e'\n  }\n});\n","import unsplash from '../api/unsplash';\n\nexport const fetchPostsAndUsers = term => async dispatch => {\n  console.log('About to fetch posts');\n  await dispatch(fetchPosts(term));\n  console.log('fetched posts!');\n};\n\nexport const fetchPosts = term => async dispatch => {\n  const response = await unsplash.get('/search/photos', {\n    params: { query: term }\n  });\n  console.log('action!');\n  dispatch({ type: 'FETCH_POSTS', payload: response.data.results });\n};\n\nexport const fetchUser = id => async dispatch => {\n  const response = await unsplash.get(`/users/${id}`);\n\n  dispatch({ type: 'FETCH_USER', payload: response.data });\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPosts } from '../actions';\n\nclass SearchBar extends React.Component {\n  state = { term: '' };\n\n  componentDidMount() {\n    console.log('init sb');\n    //this.props.fetchPostsAndUsers();\n  }\n\n  onFormSubmit = event => {\n    event.preventDefault();\n    console.log('Submit!');\n    this.props.fetchPosts(this.state.term);\n    //this.props.onSubmit(this.state.term);\n  };\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.onFormSubmit} >\n          <div>\n            <label>Image Search</label>\n            <input\n              type=\"text\"\n              value={this.state.term}\n              onChange={e => this.setState({ term: e.target.value })}\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  console.log('SearchBar mapState');\n  console.log(state)\n  return { imgs: state.imgs };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchPosts }\n)(SearchBar);\n//export default SearchBar;\n","import React, { Component } from \"react\";\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Card,\n    CardBody,\n    FormGroup,\n    Label,\n    Input\n  } from \"reactstrap\";\n  import axios from \"axios\";\n  \n  let SCALE_PREVIEW = 1.68;\n  let MAX_WIDTH = 450 * SCALE_PREVIEW;\n  let MAX_HEIGHT = (MAX_WIDTH / 16) * 9;\n  let FONT_SIZE = 13 * SCALE_PREVIEW;\n  let WORD_MARGIN = 24 * SCALE_PREVIEW;\n  \n  // small thumbnail\n  let S_MAX_WIDTH = MAX_WIDTH / SCALE_PREVIEW;\n  let S_MAX_HEIGHT = MAX_HEIGHT / SCALE_PREVIEW;\n  let S_FONT_SIZE = FONT_SIZE / SCALE_PREVIEW;\n  let S_WORD_MARGIN = WORD_MARGIN / SCALE_PREVIEW;\n  \n  var timer;\n  var currIndex = 0;\n// --- SCENE\nclass Scene extends Component {\n    state = {\n      showMediaModal: true,\n      isEditing: false,\n      texts: this.props.scene.text,\n      placements: this.props.scene.placements\n    };\n    \n    //life cycle\n    shouldComponentUpdate(nextProps, nextState) {\n      return (\n        this.state.showMediaModal !== nextState.showMediaModal ||\n        this.state.isEditing !== nextState.isEditing ||\n        this.state.texts !== nextState.texts ||\n        this.state.placements !== nextState.placements ||\n        this.props.scenes !== nextProps.scenes ||\n        this.props.scene !== nextProps.scene ||\n        this.props.text_style !== nextProps.text_style ||\n        this.props.language !== nextProps.language ||\n        this.props.index !== nextProps.index\n      );\n    }\n  \n    componentWillReceiveProps(newProps) {\n      // bug fixed: text remain position if rearrange scene\n      if (newProps.scene.text !== this.state.texts) {\n        this.setState({ texts: newProps.scene.text });\n      }\n      if (newProps.scene.placements !== this.state.placements) {\n        this.setState({ placements: newProps.scene.placements });\n      }\n    }\n  \n    componentDidUpdate(prevProps, prevState) {\n      // console.log(\"componentDidUpdate\");\n      this.setup();\n    }\n  \n    componentDidMount() {\n      this.setup();\n    }\n  \n    setup = () => {\n      // setup\n      var scene = this.props.scene;\n      var media = scene.medias[scene.selected_media_index];\n      let elmnt = media.is_video ? this.refs.s_v : this.refs.s_img;\n      elmnt.src = media.url; // update url\n  \n      var texts = this.state.texts;\n      var ctxs = texts.map((text, index) => this.refs[index].getContext(\"2d\"));\n  \n      // text.forEach((ctx, index, array) => {\n      //   console.log(this.refs[index]);\n      // });\n  \n      // clear\n      ctxs.forEach((ctx, index, array) => {\n        ctx.clearRect(0, 0, MAX_WIDTH, MAX_HEIGHT);\n      });\n  \n      // ---- Draw thummnial after video data loaded.\n      var _listener = () => {\n        var vw = media.is_video ? elmnt.clientWidth : elmnt.naturalWidth;\n        var vh = media.is_video ? elmnt.clientHeight : elmnt.naturalHeight;\n        // draw\n        // --- Video / Image\n        var scale = Math.max(S_MAX_WIDTH / vw, S_MAX_HEIGHT / vh);\n  \n        ctxs.forEach((ctx, index, array) => {\n          // --- Draw\n          ctx.drawImage(\n            elmnt,\n            (vw - S_MAX_WIDTH / scale) / 2, // crop image x\n            (vh - S_MAX_HEIGHT / scale) / 2, // crop image y\n            S_MAX_WIDTH / scale, // crop image width\n            S_MAX_HEIGHT / scale, // crop image height\n            0, // draw to canvas x\n            0, // draw to canvas y\n            S_MAX_WIDTH, // draw to canvas width\n            S_MAX_HEIGHT // draw to canvas height\n          );\n  \n          // --- Gray Layer\n          ctx.fillStyle = \"RGBA(0,0,0,0.2)\";\n          ctx.fillRect(0, 0, S_MAX_WIDTH, S_MAX_HEIGHT);\n  \n          if (!this.state.isEditing) {\n            // --- Text\n            ctx.font =\n              this.props.text_style === 1\n                ? \"bold \" + S_FONT_SIZE + \"pt Open Sans\"\n                : S_FONT_SIZE + \"pt Russo One\"; // font\n            drawWrappingWords(\n              ctx,\n              texts[index].split(this.props.language === \"english\" ? \" \" : \"\"),\n              1,\n              this.props.text_style,\n              this.props.language,\n              this.state.placements[index],\n              true\n            );\n          }\n        });\n  \n        // remove listener\n        elmnt.removeEventListener(\n          media.is_video ? \"loadeddata\" : \"load\",\n          _listener\n        );\n      };\n      elmnt.addEventListener(media.is_video ? \"loadeddata\" : \"load\", _listener);\n    };\n  \n    // --- MEDIA MODEL\n    toggleMediaModal = anim => {\n      this.setState({ showMediaModal: !this.state.showMediaModal });\n    };\n  \n    // --- MEDIA SELECT\n    onMediaSelected = index => {\n      this.setState({ showMediaModal: false });\n      this.props.onMediaChange(this.props.scene, index);\n    };\n  \n    // --- EDIT TEXT\n    onEditText = () => {\n      // NOTE: set internal state only, scenes object not yet change.\n      this.setState({\n        isEditing: true\n      });\n      this.setup();\n    };\n  \n    // --- EDIT TEXT\n    onChangePlacement = (index, alignment) => {\n      this.setState(state => {\n        const placements = state.placements.map((item, j) => {\n          if (j === index) {\n            return alignment + \"-\" + item.split(\"-\")[1];\n          } else {\n            return item;\n          }\n        });\n  \n        return {\n          placements\n        };\n      });\n      this.setup();\n    };\n  \n    onConfirmText = () => {\n      // NOTE: set state outside, scenes object changed.\n      this.props.onTextChange(\n        this.props.scene,\n        this.state.texts,\n        this.state.placements\n      );\n      this.setState({\n        isEditing: false\n      });\n      this.setup();\n    };\n  \n    onChangeText = (index, e) => {\n      let newText = e.target.value;\n      // console.log(newText);\n      this.setState(state => {\n        const texts = state.texts.map((item, j) => {\n          if (j === index) {\n            return newText;\n          } else {\n            return item;\n          }\n        });\n  \n        return {\n          texts\n        };\n      });\n    };\n  \n    render() {\n      // console.log(\"render\");\n      return (\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"center\",\n            marginBottom: \"30px\"\n          }}\n        >\n          {/* ----- controls ----- */}\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              marginRight: \"10px\"\n            }}\n          >\n            {/* ----- up ----- */}\n            {/* disable if its FIRST scene */}\n            <div>\n              <Button\n                disabled={this.props.index === 0 || this.state.isEditing}\n                onClick={() => this.props.onRearrange(this.props.scene, true)}\n                className=\"btn-round btn-icon animation-on-hover\"\n              >\n                <i className=\"tim-icons icon-minimal-up\" />\n              </Button>\n            </div>\n            {/* ----- position ----- */}\n            {this.props.scene.position + 1}\n            {/* ----- down ----- */}\n            {/* disable if its LAST scene */}\n            <div>\n              <Button\n                disabled={\n                  this.props.index === this.props.scenes.length - 1 ||\n                  this.state.isEditing\n                }\n                onClick={() => this.props.onRearrange(this.props.scene, false)}\n                className=\"btn-round btn-icon animation-on-hover\"\n              >\n                <i className=\"tim-icons icon-minimal-down\" />\n              </Button>\n            </div>\n            {/* ----- remove ----- */}\n            <Button\n              onClick={() => this.props.onRemoveScene(this.props.scene)}\n              disabled={this.state.isEditing}\n              color=\"danger\"\n              className=\"btn-icon animation-on-hover\"\n            >\n              <i className=\"tim-icons icon-trash-simple\" />\n            </Button>\n          </div>\n          {/* ----- canvas ----- */}\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\"\n            }}\n          >\n            {this.state.texts.map((text, index) => {\n              let placement = this.state.placements[index];\n              let alignment = placement.split(\"-\")[0];\n              return (\n                <div key={\"sc_\" + index} style={{ position: \"relative\" }}>\n                  {/* ----- thumbnail ----- */}\n                  <canvas\n                    width={MAX_WIDTH / SCALE_PREVIEW}\n                    height={MAX_HEIGHT / SCALE_PREVIEW}\n                    id={index}\n                    ref={index}\n                  />\n                  {/* ----- edit ----- */}\n                  <FormGroup\n                    style={{\n                      position: \"absolute\",\n                      top: 20,\n                      left: 20,\n                      display: this.state.isEditing ? \"block\" : \"none\"\n                    }}\n                  >\n                    {/* ----- edit textarea ----- */}\n                    <textarea\n                      style={{\n                        width: S_MAX_WIDTH - 40,\n                        height: S_MAX_HEIGHT - 60,\n                        backgroundColor: \"rgba(0,0,0,0.3)\",\n                        textAlign: { alignment }\n                      }}\n                      ref=\"text_edit\"\n                      onChange={e => this.onChangeText(index, e)}\n                      value={text}\n                      className=\"form-control\"\n                    />\n  \n                    {/* ----- placement buttons ----- */}\n                    <div\n                      style={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        justifyContent: \"space-between\"\n                      }}\n                    >\n                      <Button\n                        onClick={() => this.onChangePlacement(index, \"left\")}\n                        color={alignment === \"left\" ? \"\" : \"success\"}\n                        size=\"sm\"\n                      >\n                        left\n                      </Button>\n                      <Button\n                        onClick={() => this.onChangePlacement(index, \"center\")}\n                        color={alignment === \"center\" ? \"\" : \"success\"}\n                        size=\"sm\"\n                      >\n                        center\n                      </Button>\n                      <Button\n                        onClick={() => this.onChangePlacement(index, \"right\")}\n                        color={alignment === \"right\" ? \"\" : \"success\"}\n                        size=\"sm\"\n                      >\n                        right\n                      </Button>\n                    </div>\n                  </FormGroup>\n                </div>\n              );\n            })}\n          </div>\n  \n          {/* ----- video ----- */}\n          <video\n            id=\"s_v\"\n            ref=\"s_v\"\n            style={{ visibility: \"hidden\", position: \"absolute\" }}\n            controls\n            loop\n          />\n          {/* ----- image ----- */}\n          <img\n            id=\"s_img\"\n            ref=\"s_img\"\n            style={{ visibility: \"hidden\", position: \"absolute\" }}\n            alt=\"\"\n          />\n          {/* ----- right ----- */}\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              marginLeft: \"10px\"\n            }}\n          >\n            {/* ----- duration ----- */}\n            <input\n              type=\"number\"\n              value={this.props.scene.duration}\n              onChange={e => this.props.onDurationChange(this.props.scene, e)}\n              min=\"1\"\n              max=\"100\"\n              className=\"form-control\"\n            />\n            {\"second(s)\"}\n            <br />\n            {/* ----- media ----- */}\n            <Button\n              ref=\"media_btn\"\n              onClick={this.toggleMediaModal}\n              disabled={this.state.isEditing}\n              style={{ marginLeft: \"4px\" }}\n              color=\"primary\"\n              className=\"btn-icon animation-on-hover\"\n            >\n              <i className=\"tim-icons icon-image-02\" />\n            </Button>\n            {/* ----- edit text ----- */}\n            <Button\n              onClick={this.onEditText}\n              style={{ display: this.state.isEditing ? \"none\" : \"block\" }}\n              color=\"primary\"\n              className=\"btn-round btn-icon animation-on-hover\"\n            >\n              <i className=\"tim-icons icon-pencil\" />\n            </Button>\n            <Button\n              onClick={this.onConfirmText}\n              style={{ display: this.state.isEditing ? \"block\" : \"none\" }}\n              color=\"primary\"\n              className=\"btn-round btn-icon animation-on-hover\"\n            >\n              <i className=\"tim-icons icon-check-2\" />\n            </Button>\n          </div>\n  \n          {/* ----- media modal----- */}\n          <Modal\n            isOpen={this.state.showMediaModal}\n            toggle={this.toggleMediaModal}\n            size=\"lg\"\n          >\n            <ModalHeader\n              className=\"justify-content-center\"\n              toggle={this.toggleMediaModal}\n            >\n              Media\n            </ModalHeader>\n            <ModalBody className=\"justify-content-center\">\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"flex-start\",\n                  flexWrap: \"wrap\"\n                }}\n              >\n                {this.props.scene.medias.map((media, index) => {\n                  if (media.is_video) {\n                    return (\n                      <div\n                        key={index + \"_media\"}\n                        style={{\n                          margin: \"10px\",\n                          display: \"flex\",\n                          flexDirection: \"column\",\n                          justifyContent: \"center\"\n                        }}\n                      >\n                        <video\n                          src={media.url}\n                          controls\n                          width={MAX_WIDTH / SCALE_PREVIEW / 2}\n                          height={MAX_HEIGHT / SCALE_PREVIEW / 2}\n                        >\n                          <source src={media.url} />\n                        </video>\n                        <Button\n                          size=\"sm\"\n                          onClick={() => this.onMediaSelected(index)}\n                        >\n                          Select\n                        </Button>\n                      </div>\n                    );\n                  } else {\n                    return (\n                      <div\n                        key={index + \"_media\"}\n                        style={{\n                          margin: \"10px\",\n                          display: \"flex\",\n                          flexDirection: \"column\",\n                          justifyContent: \"center\"\n                        }}\n                      >\n                        <img\n                          src={media.url}\n                          width={MAX_WIDTH / SCALE_PREVIEW / 2}\n                          height={MAX_HEIGHT / SCALE_PREVIEW / 2}\n                          alt=\"thumbnail\"\n                        />\n                        <Button\n                          size=\"sm\"\n                          onClick={() => this.onMediaSelected(index)}\n                        >\n                          Select\n                        </Button>\n                      </div>\n                    );\n                  }\n                })}\n              </div>\n            </ModalBody>\n          </Modal>\n        </div>\n      );\n    }\n  }\n\n// wrap words\nconst drawWrappingWords = (\n    context,\n    words,\n    t_alpha,\n    style_num,\n    language,\n    placement,\n    is_thumbnail\n  ) => {\n    var font_size = is_thumbnail ? S_FONT_SIZE : FONT_SIZE,\n      word_margin = is_thumbnail ? S_WORD_MARGIN : WORD_MARGIN,\n      max_width = is_thumbnail ? S_MAX_WIDTH : MAX_WIDTH,\n      max_height = is_thumbnail ? S_MAX_HEIGHT : MAX_HEIGHT;\n  \n    var x = word_margin,\n      y = word_margin + font_size, // top margin to word size (align by work baseline)\n      maxWidth = max_width - word_margin * 2 - max_width / 4, // width - left right margin - right margin,\n      lineHeight = font_size + font_size,\n      line = \"\",\n      count = 0,\n      top = y,\n      hrzntl_point,\n      vrtcl_point,\n      alignment,\n      anim1_x,\n      anim1_thickness = is_thumbnail ? 4 / SCALE_PREVIEW : 4,\n      anim1_margin = is_thumbnail ? 10 / SCALE_PREVIEW : 10;\n  \n    switch (placement) {\n      case \"left-top\":\n        alignment = \"left\";\n        hrzntl_point = word_margin;\n        anim1_x = hrzntl_point - anim1_margin;\n        break;\n      case \"center-top\":\n        alignment = \"center\";\n        hrzntl_point = max_width / 2;\n        break;\n      case \"right-top\":\n        alignment = \"right\";\n        hrzntl_point = max_width - word_margin;\n        anim1_x = hrzntl_point + anim1_margin;\n        break;\n    }\n  \n    context.shadowColor = \"rgba(0,0,0,0.3)\";\n    context.shadowBlur = 4;\n  \n    var max_word_width = 0;\n    for (var n = 0; n < words.length; n++) {\n      var space = language === \"english\" ? \" \" : \"\";\n      var testLine = line + words[n] + space;\n      var metrics = context.measureText(testLine);\n      var textWidth = metrics.width;\n      if (textWidth > maxWidth && n > 0) {\n        context.fillStyle = \"RGBA(255,255,255,\" + t_alpha + \")\";\n        context.textAlign = alignment;\n        context.fillText(line, hrzntl_point, y); // draw text\n        count += 1;\n        line = words[n] + space;\n        y += lineHeight;\n      } else {\n        line = testLine;\n        max_word_width = Math.max(textWidth, max_word_width);\n        // -- animation 2\n        if (style_num === 2) {\n          var x_point = 0;\n          context.fillStyle = \"#000\";\n          switch (alignment) {\n            case \"left\":\n              x_point = word_margin - 3;\n              break;\n            case \"center\":\n              x_point = (max_width - textWidth) / 2;\n              break;\n            case \"right\":\n              x_point = max_width - textWidth - word_margin;\n              break;\n          }\n          context.fillRect(\n            x_point,\n            y - font_size - 4,\n            textWidth * t_alpha + 4,\n            font_size + 10\n          );\n        }\n      }\n    }\n    // -- animation 2\n    var textWidth = context.measureText(line).width;\n    if (style_num === 2) {\n      // context.fillStyle = \"#333300\";\n      var x_point = 0;\n      context.fillStyle = \"#000\";\n      switch (alignment) {\n        case \"left\":\n          x_point = word_margin - 3;\n          break;\n        case \"center\":\n          x_point = (max_width - textWidth) / 2 - 4;\n          break;\n        case \"right\":\n          x_point = max_width - textWidth - word_margin - 4;\n          break;\n      }\n      context.fillRect(\n        x_point,\n        y - font_size - 4,\n        textWidth * t_alpha + 4,\n        font_size + 10\n      );\n    }\n    context.fillStyle = \"RGBA(255,255,255,\" + t_alpha + \")\";\n    context.textAlign = alignment;\n    context.fillText(line, hrzntl_point, y); // draw text\n    max_word_width = Math.max(textWidth, max_word_width);\n  \n    // -- animation 1\n    if (style_num === 1) {\n      count += 1;\n      var max_height = count * lineHeight - font_size / 2;\n      context.fillStyle = \"#ffff66\";\n      if (alignment !== \"center\") {\n        context.fillRect(\n          anim1_x,\n          top - font_size,\n          anim1_thickness,\n          max_height * t_alpha\n        );\n      } else {\n        context.fillRect(\n          (max_width - max_word_width) / 2,\n          word_margin - 10,\n          max_word_width * t_alpha,\n          anim1_thickness\n        );\n      }\n    }\n  };\n\nexport default Scene;","import React, { Component } from \"react\";\nimport classNames from \"classnames\";\nimport \"../assets/scss/black-dashboard-react.scss\";\nimport \"../assets/css/nucleo-icons.css\";\nimport {\n    Button,\n    ButtonGroup,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Card,\n    CardBody,\n    FormGroup,\n    Label,\n    Input\n  } from \"reactstrap\";\nimport axios from \"axios\";\nimport SearchBar from \"./SearchBar\"\nimport Scene from \"./Scene\"\nimport { connect } from 'react-redux';\nimport { fetchPosts } from '../actions';\n\nlet SCALE_PREVIEW = 1.68;\nlet MAX_WIDTH = 450 * SCALE_PREVIEW;\nlet MAX_HEIGHT = (MAX_WIDTH / 16) * 9;\nlet FONT_SIZE = 13 * SCALE_PREVIEW;\nlet WORD_MARGIN = 24 * SCALE_PREVIEW;\n\n\nclass DashBoard extends Component {\n    constructor(props) {\n        super(props);\n    }\n    state = {\n        bigChartData: \"data1\",\n        language: \"english\",\n        text_style: 1, // text animation 1 or 2\n        music: 0, // music 0 or 1\n        scenePlaytime: 0, // sec\n        fullPlaytime: 0, // sec\n        isDisablePlay: false,\n        showPreviewModal: false,\n        isLoadingApi: false,\n        text_display: <div />,\n        scenes: [\n        ],\n        audios: [\n          \"https://storage.googleapis.com/lumen5-prod-audio/gothic-30z1OCWHSO4wee111gPGbe.mp3\",\n          \"https://storage.googleapis.com/lumen5-prod-audio/holly-in-the-snowfkRwixHOarpzLAwFBzLc.mp3\",\n          \"https://storage.googleapis.com/lumen5-prod-audio/home-at-last-is-she-thereM1kcjgrdLu2mk3e2ED3s.mp3\",\n          \"https://storage.googleapis.com/lumen5-prod-audio/bnm-0715-rubber-trees-fullB5W821PYiWsd.mp3\",\n          \"https://storage.googleapis.com/lumen5-prod-audio/netherworld30GyArwSSgBpNeoDx8RH6.mp3\"\n        ]\n      };\n\n      setBgChartData = name => {\n        this.setState({\n          bigChartData: name\n        });\n      };\n\n    doSerialize = newProps => {\n      return {\n        position: 0,\n        duration: 10,\n        text: ['test'],\n        placements: [\"center-top\"],\n        selected_media_index: 0,\n        medias: newProps.imgs.map(img => ({\n          is_video: false,\n          url: img.urls.regular\n          // url: media.isVideo\n          //   ? \"https://storage.googleapis.com/lumen5-prod-video/preview-I1zn-videocontentDHmMj5Bwoman-lying-on-the-sofa-and-watching-television_v128pz7b__D.mp4\"\n          //   : \"https://storage.googleapis.com/lumen5-prod-images/tmpYpUyfR.jpg\"\n        }))\n      };\n    };\n      \n    // --- API\n    onApiCall = () => {\n        var articleTitle = this.refs.title_article.value;\n        var articleText = this.refs.text_article.value;\n        var articleUrl = this.refs.url_article.value;\n        var articleLimit = this.refs.limit_article.value;\n\n        if (articleText === \"\" && articleUrl === \"\") return;\n\n        var hasText = articleText !== \"\";\n\n        //this.setState({ isLoadingApi: true });\n        this.props.fetchPosts(articleText);\n        //this.setState({\n        //isLoadingApi: false,\n        //scenes: newScenes,\n        //text_display: articleText\n        //});\n    };\n\n    // --- general functions\n    toMMSS = s => {\n        var sec_num = parseInt(s, 10); // don't forget the second param\n        var minutes = Math.floor(sec_num / 60);\n        var seconds = sec_num - minutes * 60;\n\n        if (minutes < 10) {\n        minutes = \"0\" + minutes;\n        }\n        if (seconds < 10) {\n        seconds = \"0\" + seconds;\n        }\n        return minutes + \":\" + seconds;\n    };\n\n    componentWillReceiveProps(newProps) {\n      console.log('233')\n      console.log(newProps);\n      let newSc = this.doSerialize(newProps);\n      console.log(newSc)\n      this.setState({scenes : [newSc]});\n    }\n    // --- UI\n    render() {\n        return (\n            <div\n              className=\"App\"\n              style={{\n                margin: \"16px\"\n              }}\n            >\n              <div\n                style={{\n                  left: 0,\n                  width: \"40%\",\n                  height: \"100%\",\n                  position: \"fixed\",\n                  zIndex: 1,\n                  top: 0,\n                  overflowX: \"hidden\",\n                  padding: \"16px\",\n                  boxShadow: \"0 0 0 0 black, 0 0 10px 0 black\",\n                  backgroundColor: \"rgba(255,255,255,0.03)\",\n                }}\n              >\n                {/* ----- display ----- */}\n                <Card>\n                  <CardBody style={{ textAlign: \"justify\" }}>\n                    <span\n                      style={{\n                        color: \"white\"\n                      }}\n                    >\n                        {this.state.text_display}\n                    </span>\n                  </CardBody>\n                </Card>\n                {/* ----- form ----- */}\n                <FormGroup>\n                  <input\n                    ref=\"title_article\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Paste title here\"\n                  />\n                <Card>\n                  <CardBody style={{ textAlign: \"justify\" }}>\n                    <span\n                      style={{\n                        color: \"white\"\n                      }}\n                    >\n                    <textarea\n                    ref=\"text_article\"\n                    rows=\"50\" \n                    cols=\"60\"\n                    placeholder=\"Paste article text here\"\n                    className=\"form-control\"\n                   />\n                    </span>\n                  </CardBody>\n                </Card>\n                <SearchBar/>\n                  or\n                  <br />\n                  <input\n                    ref=\"url_article\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Paste article url here (eg. http://www.article.com)\"\n                  />\n                  <br />\n                  <input\n                    ref=\"limit_article\"\n                    type=\"number\"\n                    className=\"form-control\"\n                    defaultValue=\"3\"\n                    placeholder=\"Limit no.\"\n                  />\n                </FormGroup>\n                <br />\n                <br />\n                {/* ----- music ----- */}\n                <FormGroup>\n                    <Label>Music:</Label>\n                    <Input\n                    type=\"select\"\n                    name=\"select\"\n                    id=\"music_selection\"\n                    >\n                    <option value=\"0\">Music 1</option>\n                    <option value=\"1\">Music 2</option>\n                    <option value=\"2\">Music 3</option>\n                    <option value=\"3\">Music 4</option>\n                    <option value=\"4\">Music 5</option>\n                    </Input>\n                </FormGroup>\n                <br />\n                {/* ----- api ----- */}\n                <Button\n                  onClick={this.onApiCall}\n                  color=\"primary\"\n                  className=\"animation-on-hover\"\n                  disabled={this.state.isLoadingApi}\n                >\n                  {this.state.isLoadingApi ? \"Loading...\" : \"Submit\"}\n                </Button>\n                <br />\n                <div\n                style={{\n                    bottom : \"0px\"\n                }}\n                >\n                <ButtonGroup\n                className=\"btn-group-toggle float-right\"\n                data-toggle=\"buttons\"\n                >\n                <Button\n                    tag=\"label\"\n                    color=\"info\"\n                    id=\"0\"\n                    size=\"sm\"\n                    className={classNames(\"btn-simple\", {\n                        active: this.state.bigChartData === \"data1\"\n                      })}\n                    onClick={() => this.setBgChartData(\"data1\")}\n                >\n                    <input\n                    defaultChecked\n                    className=\"d-none\"\n                    name=\"options\"\n                    type=\"radio\"\n                    />\n                    <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                    English\n                    </span>\n                    <span className=\"d-block d-sm-none\">\n                    <i className=\"tim-icons icon-single-02\" />\n                    </span>\n                </Button>\n                <Button\n                    color=\"info\"\n                    id=\"1\"\n                    size=\"sm\"\n                    tag=\"label\"\n                    className={classNames(\"btn-simple\", {\n                        active: this.state.bigChartData === \"data2\"\n                      })}\n                    onClick={() => this.setBgChartData(\"data2\")}\n                >\n                    <input\n                    className=\"d-none\"\n                    name=\"options\"\n                    type=\"radio\"\n                    />\n                    <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                    Chinese\n                    </span>\n                    <span className=\"d-block d-sm-none\">\n                    <i className=\"tim-icons icon-gift-2\" />\n                    </span>\n                </Button>\n                </ButtonGroup>\n                </div>\n                <br />\n                <br />\n                <br />\n              </div>\n              <div\n                style={{\n                  right: 0,\n                  width: \"60%\",\n                  height: \"100%\",\n                  position: \"fixed\",\n                  zIndex: 1,\n                  top: 0,\n                  overflowX: \"hidden\",\n                  margin: \"16px\",\n                  textAlign: \"center\"\n                }}\n              >\n                <Button color=\"primary\" onClick={this.togglePreviewModal}>\n                  Preview\n                </Button>\n                <br />\n                <br />\n                {/* ----- list ----- */}\n                <div>\n                  {this.state.scenes.map((scene, index) => (\n                    \n                    <Scene\n                      key={index}\n                      scenes={this.state.scenes}\n                      scene={scene}\n                      index={index}\n                      language={this.state.language}\n                      text_style={this.state.text_style}\n                      onRearrange={this.onRearrange}\n                      onRemoveScene={this.onRemoveScene}\n                      onDurationChange={this.onDurationChange}\n                      onMediaChange={this.onMediaChange}\n                      onTextChange={this.onTextChange}\n                    />\n                  ))}\n                </div>\n                <br /> <br />\n              </div>\n      \n              {/* ----- modal backdrop ----- */}\n              <div\n                style={{\n                  backgroundColor: \"rgba(0,0,0,0.7)\",\n                  top: 0,\n                  left: 0,\n                  height: \"100%\",\n                  width: \"100%\",\n                  position: \"absolute\",\n                  zIndex: 1,\n                  overflow: \"hidden\",\n                  textAlign: \"center\",\n                  display:\n                    this.state.showPreviewModal || this.state.isLoadingApi\n                      ? \"block\"\n                      : \"none\"\n                }}\n              />\n      \n              {/* ----- preview ----- */}\n              <Modal\n                isOpen={this.state.showPreviewModal}\n                style={{ \n                  overflow: \"hidden\",\n                  textAlign: \"center\"\n                }}\n                size=\"lg\"\n              >\n                <ModalHeader\n                  className=\"justify-content-center\"\n                >\n                  Preview\n                </ModalHeader>\n                <ModalBody className=\"justify-content-center\">\n                  <p style={{ textAlign: \"right\" }}>\n                    ({this.toMMSS(this.state.scenePlaytime)})\n                  </p>\n                  {/* ----- canvas ----- */}\n                  <canvas\n                    id=\"c\"\n                    ref=\"c\"\n                    width={MAX_WIDTH}\n                    height={MAX_HEIGHT}\n                    style={{\n                      backgroundColor: \"#dfdfdf\"\n                    }}\n                  />\n                  <p style={{ textAlign: \"right\" }}>\n                    {// current time\n                    this.toMMSS(this.state.fullPlaytime) +\n                      \"/\" +\n                      // total time\n                      this.toMMSS(\n                        this.state.scenes.reduce(\n                          (total, curr) => total + (curr.duration || 0),\n                          0\n                        )\n                      )}\n                  </p>\n                  <br />\n                  {/* ----- video ----- */}\n                  <video\n                    id=\"v\"\n                    ref=\"v\"\n                    style={{\n                      visibility: \"hidden\",\n                      position: \"absolute\",\n                      backgroundColor: \"#dfdfdf\"\n                    }}\n                    controls\n                    loop\n                  />\n                  {/* ----- image ----- */}\n                  <img\n                    id=\"img\"\n                    ref=\"img\"\n                    style={{ visibility: \"hidden\", position: \"absolute\" }}\n                    alt=\"\"\n                  />\n                  {/* ----- audio ----- */}\n                  <audio id=\"m\" ref=\"m\" />\n                </ModalBody>\n                <ModalFooter className=\"justify-content-center\">\n                  {/* ----- play ----- */}\n                  <Button\n                    ref=\"play_btn\"\n                    onClick={this.playAllScened}\n                    color=\"primary\"\n                    className=\"btn-icon animation-on-hover\"\n                    disabled={this.state.isDisablePlay}\n                  >\n                    <i className=\"tim-icons icon-triangle-right-17\" />\n                  </Button>\n                </ModalFooter>\n              </Modal>\n      \n              {/* ----- loading ----- */}\n              <Modal isOpen={this.state.isLoadingApi} size=\"sm\">\n                <ModalBody className=\"justify-content-center\">\n                  <p>loading...</p>\n                </ModalBody>\n              </Modal>\n            </div>\n        );\n    }\n\n    // --- REMOVE SCENE\n    onRemoveScene = item => {\n      this.setState(state => {\n        const scenes = state.scenes.filter(\n          scene => scene.position !== item.position\n        );\n  \n        return {\n          scenes\n        };\n      });\n    };\n  \n    // --- CHANGE DURATION\n    onDurationChange = (item, e) => {\n      let newScenes = [...this.state.scenes];\n      newScenes[item.position].duration = Number(e.target.value);\n      this.setState({ scenes: newScenes });\n    };\n  \n    // --- CHANGE TEXT\n    onTextChange = (item, texts, placements) => {\n      let newScenes = [...this.state.scenes];\n      newScenes[item.position].text = texts;\n      newScenes[item.position].placements = placements;\n      this.setState({ scenes: newScenes });\n    };\n  \n    // --- CHANGE MEDIA\n    onMediaChange = (item, index) => {\n      let newScenes = [...this.state.scenes];\n      newScenes[item.position].selected_media_index = index;\n      this.setState({ scenes: newScenes });\n    };\n  \n    // --- REARRANGE\n    onRearrange = (item, is_to_front) => {\n      var newPosition = is_to_front ? item.position - 1 : item.position + 1;\n      var oldPosition = item.position;\n      // --- change position data\n      var new_scenes = [];\n      this.state.scenes.forEach(scene => {\n        // console.log(\"scene: \" + scene.text);\n        // console.log(\"position: \" + scene.position);\n        if (scene.position === newPosition) {\n          // move used-to-be\n          scene.position = oldPosition;\n        } else if (scene.position === item.position) {\n          // move user selected\n          scene.position = newPosition;\n        }\n        // console.log(\"new position: \" + scene.position);\n        new_scenes.push(scene);\n      });\n      // --- sort\n      new_scenes = new_scenes.sort((a, b) => {\n        const positionA = a.position;\n        const positionB = b.position;\n  \n        let comparison = 0;\n        if (positionA > positionB) {\n          comparison = 1;\n        } else if (positionA < positionB) {\n          comparison = -1;\n        }\n        return comparison;\n      });\n      this.setState({ scenes: new_scenes });\n    };\n  \n    // --- LANGUAGE\n    onLanguageChanged = language => {\n      this.setState({ language: language });\n    };\n    // --- TEXT STYLE\n    onStyleChanged = selection => {\n      this.setState({ text_style: selection });\n    };\n    // --- MUSIC\n    onMusicChanged = e => {\n      let musicSelection = e.target.value;\n      this.setState({ music: parseInt(musicSelection) });\n    };\n  \n    // --- PREVIEW MODEL\n    togglePreviewModal = anim => {\n      // if close preview reset\n      this.doStop();\n      // close modal\n      this.setState({\n        showPreviewModal: !this.state.showPreviewModal\n      });\n    };\n}\n\nconst mapStateToProps = state => {\n  console.log('Dashbaord mapState');\n  return { imgs: state.imgs };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchPosts }\n)(DashBoard);\n//export default DashBoard;","import React from 'react';\nimport './App.css';\n\nimport DashBoard from './DashBoard';\nimport SearchBar from './SearchBar';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/*<header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload!!.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n  </header>*/}\n      <DashBoard/>\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\n\nconst imgReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'FETCH_POSTS':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  imgs: imgReducer,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reducers from './reducers';\n\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.querySelector('#root')\n    );\n//ReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}